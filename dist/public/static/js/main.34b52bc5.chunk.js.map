{"version":3,"sources":["context/types/index.ts","context/alert/alertContext.tsx","context/alert/alertReducer.tsx","context/alert/alertState.tsx","context/collection/collectionContext.tsx","context/collection/collectionReducer.tsx","context/collection/collectionState.tsx","components/AlertBox.tsx","components/dashboard/Options.tsx","components/dashboard/CollectionV.tsx","helpers/sortingAlgorithms.ts","components/dashboard/Dashboard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SET_ALERT","SET_COLLECTION","SET_TITLE","SET_ALGORITHM","SET_ISSORTING","SET_STEPS","SET_COMPLEXITY","AlertContext","createContext","undefined","AlertReducer","state","action","type","alert","payload","AlertState","props","useReducer","show","msg","dispatch","setAlert","useCallback","Provider","value","children","CollectionContext","CollectionReducer","collection","title","steps","complexity","algorithm","isSorting","CollectionState","setCollection","setTitle","setSteps","setComplexity","setAlgorithm","setIsSorting","Alert","elevation","variant","AlertBox","useContext","handleClose","event","reason","Snackbar","open","autoHideDuration","onClose","severity","Options","sort","List","ListItem","button","onClick","ListItemIcon","Typography","component","color","noWrap","ListItemText","primary","CollectionV","fullWidth","length","map","eachElement","index","style","backgroundColor","height","num","width","border","display","textAlign","language","dracula","printAlgorithm","timer","ms","Promise","res","setTimeout","bubbleSortAnimation","speed","a","n","A","swapped","count","i","aux","bubbleSortOptimizedAnimation","newN","selectionSortAnimation","min","j","insertionSortAnimation","quickSortFullAnimation","quicksort","lo","hi","partition","p","pivot","shellSortAnimation","gap","temp","mergeSortFullAnimation","mergeSort","m","left","right","push","merge","result","shift","useStyles","makeStyles","theme","root","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","slider","maxWidth","margin","Dashboard","classes","viewer","useRef","useState","setOpen","setFullWidth","setLength","setSpeed","useEffect","current","offsetWidth","newCollection","Math","floor","random","className","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-label","id","gutterBottom","Slider","defaultValue","aria-labelledby","valueLabelDisplay","step","marks","max","onChange","e","val","disabled","Drawer","Divider","name","Container","ref","darkTheme","createMuiTheme","palette","main","secondary","warning","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34b52bc5.chunk.js","sourcesContent":["export const SET_ALERT = 'SET_ALERT';\r\n\r\nexport const SET_COLLECTION = 'SET_COLLECTION';\r\n\r\nexport const SET_TITLE = 'SET_TITLE';\r\n\r\nexport const SET_ALGORITHM = 'SET_ALGORITHM';\r\n\r\nexport const SET_ISSORTING = 'SET_ISSORTING';\r\n\r\nexport const SET_STEPS = 'SET_STEPS';\r\n\r\nexport const SET_COMPLEXITY = 'SET_COMPLEXITY';","import {createContext} from 'react';\r\n\r\nconst AlertContext = createContext<any>(undefined);\r\n\r\nexport default AlertContext;\r\n","import {SET_ALERT} from '../types';\r\n\r\n//state es el incial state y action el la información del dispatch\r\nconst AlertReducer = (state: any, action: any) => {\r\n    switch(action.type) {\r\n        case SET_ALERT:\r\n            return {\r\n                ...state,\r\n                alert: action.payload \r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default AlertReducer;","import React, {useReducer, useCallback} from 'react';\r\nimport {SET_ALERT} from '../types';\r\nimport AlertContext from './alertContext';\r\nimport AlertReducer from './alertReducer';\r\n\r\n\r\n\r\nconst AlertState: React.FC = (props) => {\r\n\r\n    const initialState = {\r\n        alert: {\r\n            show: false,\r\n            msg: '',\r\n            type: ''\r\n        }\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(AlertReducer, initialState);\r\n\r\n    const setAlert = useCallback((alert) => {\r\n        dispatch({\r\n            type: SET_ALERT,\r\n            payload: alert\r\n        });\r\n    },[]);\r\n\r\n\r\n\r\n    return (\r\n        <AlertContext.Provider\r\n            value={{\r\n                alert: state.alert,\r\n                setAlert\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AlertContext.Provider>\r\n    )\r\n}\r\n \r\nexport default AlertState; ","import {createContext} from 'react';\r\n\r\nconst CollectionContext = createContext<any>(undefined);\r\n\r\nexport default CollectionContext;\r\n","import {SET_COLLECTION, SET_TITLE, SET_ALGORITHM, SET_ISSORTING, SET_STEPS, SET_COMPLEXITY} from '../types';\r\n\r\n//state es el incial state y action el la información del dispatch\r\nconst CollectionReducer = (state: any, action: any) => {\r\n    switch(action.type) {\r\n        case SET_COLLECTION:\r\n            return {\r\n                ...state,\r\n                collection: action.payload \r\n            }\r\n        case SET_TITLE:\r\n            return {\r\n                ...state,\r\n                title: action.payload \r\n            }\r\n        case SET_STEPS:\r\n            return {\r\n                ...state,\r\n                steps: action.payload \r\n            }\r\n        case SET_COMPLEXITY:\r\n            return {\r\n                ...state,\r\n                complexity: action.payload \r\n            }\r\n        case SET_ALGORITHM:\r\n            return {\r\n                ...state,\r\n                algorithm: action.payload \r\n            }\r\n        case SET_ISSORTING:\r\n            return {\r\n                ...state,\r\n                isSorting: action.payload \r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default CollectionReducer;","import React, {useReducer, useCallback} from 'react';\r\nimport {SET_COLLECTION, SET_TITLE, SET_ALGORITHM, SET_ISSORTING, SET_STEPS, SET_COMPLEXITY} from '../types';\r\nimport CollectionContext from './collectionContext';\r\nimport CollectionReducer from './collectionReducer';\r\n\r\n\r\n\r\nconst CollectionState: React.FC = (props) => {\r\n\r\n    const initialState = {\r\n        collection: [],\r\n        title: '',\r\n        steps: 0,\r\n        complexity: '',\r\n        algorithm: '',\r\n        isSorting: false\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(CollectionReducer, initialState);\r\n\r\n    const setCollection = useCallback((collection) => {\r\n        dispatch({\r\n            type: SET_COLLECTION,\r\n            payload: collection\r\n        });\r\n    },[]);\r\n\r\n    const setTitle = useCallback((title) => {\r\n        dispatch({\r\n            type: SET_TITLE,\r\n            payload: title\r\n        });\r\n    },[]);\r\n\r\n    const setSteps = useCallback((steps) => {\r\n        dispatch({\r\n            type: SET_STEPS,\r\n            payload: steps\r\n        });\r\n    },[]);\r\n\r\n    const setComplexity = useCallback((complexity) => {\r\n        dispatch({\r\n            type: SET_COMPLEXITY,\r\n            payload: complexity\r\n        });\r\n    },[]);\r\n\r\n    const setAlgorithm = useCallback((algorithm) => {\r\n        dispatch({\r\n            type: SET_ALGORITHM,\r\n            payload: algorithm\r\n        });\r\n    },[]);\r\n\r\n    const setIsSorting = useCallback((isSorting) => {\r\n        dispatch({\r\n            type: SET_ISSORTING,\r\n            payload: isSorting\r\n        });\r\n    },[]);\r\n\r\n\r\n\r\n    return (\r\n        <CollectionContext.Provider\r\n            value={{\r\n                collection: state.collection,\r\n                title: state.title,\r\n                steps: state.steps,\r\n                complexity: state.complexity,\r\n                algorithm: state.algorithm,\r\n                isSorting: state.isSorting,\r\n                setCollection,\r\n                setTitle,\r\n                setSteps,\r\n                setComplexity,\r\n                setAlgorithm,\r\n                setIsSorting\r\n            }}\r\n        >\r\n            {props.children}\r\n        </CollectionContext.Provider>\r\n    )\r\n}\r\n \r\nexport default CollectionState; ","import React, { useContext } from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport AlertContext from '../context/alert/alertContext';\r\n\r\n\r\nfunction Alert(props: any) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nconst AlertBox: React.FC = () => {\r\n\r\n    const { alert, setAlert } = useContext(AlertContext);\r\n\r\n    \r\n    const handleClose = (event: any, reason: any) => {\r\n        if (reason === 'clickaway') {\r\n        return;\r\n        }\r\n\r\n        setAlert({...alert, show: false});\r\n    };\r\n    \r\n    return ( \r\n        <Snackbar open={alert.show} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity={alert.type}>\r\n                {alert.msg}\r\n            </Alert>\r\n        </Snackbar>\r\n     );\r\n}\r\n \r\nexport default AlertBox;","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport StarIcon from '@material-ui/icons/Star';\r\n\r\nexport interface OptionsProps {\r\n    sort: Function;\r\n}\r\n \r\nconst Options: React.FC<OptionsProps> = ({sort}) => {\r\n    return ( \r\n        <div>\r\n            <List>\r\n                <ListItem button onClick={() => sort('bubble')}>\r\n                    <ListItemIcon>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap>\r\n                        B\r\n                    </Typography>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Bubble Sort\" />\r\n                </ListItem>\r\n\r\n                <ListItem button onClick={() => sort('bubbleOptimized')}>\r\n                    <ListItemIcon>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap>\r\n                        BO\r\n                    </Typography>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Bubble Sort Opt.\" />\r\n                </ListItem>\r\n\r\n                <ListItem button onClick={() => sort('selection')}>\r\n                    <ListItemIcon>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap>\r\n                        S\r\n                    </Typography>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Selection Sort\" />\r\n                </ListItem>\r\n\r\n                <ListItem button onClick={() => sort('insertion')}>\r\n                    <ListItemIcon>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap>\r\n                        I\r\n                    </Typography>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Insertion Sort\" />\r\n                </ListItem>\r\n\r\n                <ListItem button onClick={() => sort('shell')}>\r\n                    <ListItemIcon>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap>\r\n                        SH\r\n                    </Typography>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Shell Sort\" />\r\n                </ListItem>\r\n\r\n                <ListItem button onClick={() => sort('merge')}>\r\n                    <ListItemIcon>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap>\r\n                        M\r\n                    </Typography>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Merge Sort\" />\r\n                </ListItem>\r\n                \r\n                <ListItem button onClick={() => sort('quicksort')}>\r\n                    <ListItemIcon>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap>\r\n                        Q\r\n                    </Typography>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"QuickSort\" />\r\n                </ListItem>\r\n\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Options;","import React, { useContext } from 'react';\r\nimport CollectionContext from '../../context/collection/collectionContext';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { dracula } from 'react-syntax-highlighter/dist/esm/styles/hljs'\r\n\r\ninterface elementProps {\r\n    num: number;\r\n    color: string;\r\n}\r\n\r\nexport interface CollectionVProps {\r\n    fullWidth: number;\r\n    length: number;\r\n    collection: elementProps[];\r\n}\r\n\r\n \r\nconst CollectionV: React.FC<CollectionVProps> = ({fullWidth, length, collection}) => {\r\n    \r\n    const { algorithm, steps, complexity } = useContext(CollectionContext);\r\n    \r\n\r\n    const printAlgorithm = () => {\r\n        switch(algorithm){\r\n            case 'bubble':\r\n                return (\r\n                    <SyntaxHighlighter language=\"markdown\" style={dracula}>\r\n                        {`procedure bubbleSort(A : list of sortable items)\r\n    n := length(A)\r\n    repeat\r\n        swapped := false\r\n        for i := 1 to n-1 inclusive do\r\n            /* if this pair is out of order */\r\n            if A[i-1] > A[i] then\r\n                /* swap them and remember something changed */\r\n                swap(A[i-1], A[i])\r\n                swapped := true\r\n            end if\r\n        end for\r\n    until not swapped\r\nend procedure`}\r\n                    </SyntaxHighlighter>\r\n                );\r\n            case 'bubbleOptimized':\r\n                return (\r\n                    <SyntaxHighlighter language=\"markdown\" style={dracula}>\r\n                    {`procedure bubbleSortOptimized(A : list of sortable items)\r\n    n := length(A)\r\n    repeat\r\n        newn := 0\r\n        for i := 1 to n - 1 inclusive do\r\n            if A[i - 1] > A[i] then\r\n                swap(A[i - 1], A[i])\r\n                newn := i\r\n            end if\r\n        end for\r\n        n := newn\r\n    until n ≤ 1\r\nend procedure`}\r\n                </SyntaxHighlighter>\r\n                );\r\n            case 'selection':\r\n                return (\r\n                    <SyntaxHighlighter language=\"markdown\" style={dracula}>\r\n                    {`procedure selectionSort(A : list of sortable items)\r\n    for i := 0; to n - 2 inclusive do\r\n        min := i\r\n        for j := i + 1 to n - 1 inclusive do\r\n            if A[j] < A[min] then\r\n                min := j\r\n            end if\r\n        end for\r\n        swap(A[i], A[min])\r\n    end for\r\nend procedure`}\r\n                </SyntaxHighlighter>\r\n                );\r\n            case 'insertion':\r\n                return(\r\n                    <SyntaxHighlighter language=\"markdown\" style={dracula}>\r\n                    {`procedure insertionSort(A : list of sortable items)\r\n    i ← 1\r\n    while i < length(A)\r\n        j ← i\r\n        while j > 0 and A[j-1] > A[j]\r\n            swap A[j] and A[j-1]\r\n            j ← j - 1\r\n        end while\r\n        i ← i + 1\r\n    end while\r\nend procedure`}\r\n                </SyntaxHighlighter>\r\n                );\r\n            case 'quicksort':\r\n                return(\r\n                    <SyntaxHighlighter language=\"markdown\" style={dracula}>\r\n                    {`algorithm quicksort(A, lo, hi) is\r\n    if lo < hi then\r\n        p := partition(A, lo, hi)\r\n        quicksort(A, lo, p - 1)\r\n        quicksort(A, p + 1, hi)\r\n\r\nalgorithm partition(A, lo, hi) is\r\n    pivot := A[hi]\r\n    i := lo\r\n    for j := lo to hi do\r\n        if A[j] < pivot then\r\n            swap A[i] with A[j]\r\n            i := i + 1\r\n    swap A[i] with A[hi]\r\n    return i`}\r\n                </SyntaxHighlighter>\r\n                );\r\n            case 'shell':\r\n                return (\r\n                    <SyntaxHighlighter language=\"markdown\" style={dracula}>\r\n                    {`# Sort an array a[0...n-1].\r\ngaps = [701, 301, 132, 57, 23, 10, 4, 1]\r\n\r\n# Start with the largest gap and work down to a gap of 1\r\nforeach (gap in gaps)\r\n{\r\n    # Do a gapped insertion sort for this gap size.\r\n    # The first gap elements a[0..gap-1] are already in gapped order\r\n    # keep adding one more element until the entire array is gap sorted\r\n    for (i = gap; i < n; i += 1)\r\n    {\r\n        # add a[i] to the elements that have been gap sorted\r\n        # save a[i] in temp and make a hole at position i\r\n        temp = a[i]\r\n        # shift earlier gap-sorted elements up until the correct location for a[i] is found\r\n        for (j = i; j >= gap and a[j - gap] > temp; j -= gap)\r\n        {\r\n            a[j] = a[j - gap]\r\n        }\r\n        # put temp (the original a[i]) in its correct location\r\n        a[j] = temp\r\n    }\r\n}`}\r\n                </SyntaxHighlighter>\r\n                );\r\n            case 'merge':\r\n                return (\r\n                    <SyntaxHighlighter language=\"markdown\" style={dracula}>\r\n                    {`function merge_sort(node head) is\r\n    // return if empty list\r\n    if head = nil then\r\n        return nil\r\n    var node array[32]; initially all nil\r\n    var node result\r\n    var node next\r\n    var int  i\r\n    result := head\r\n    // merge nodes into array\r\n    while result ≠ nil do\r\n        next := result.next;\r\n        result.next := nil\r\n        for (i = 0; (i < 32) && (array[i] ≠ nil); i += 1) do\r\n            result := merge(array[i], result)\r\n            array[i] := nil\r\n        // do not go past end of array\r\n        if i = 32 then\r\n            i -= 1\r\n        array[i] := result\r\n        result := next\r\n    // merge array into single list\r\n    result := nil\r\n    for (i = 0; i < 32; i += 1) do\r\n        result := merge(array[i], result)\r\n    return result`}\r\n                </SyntaxHighlighter>\r\n                );\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <>\r\n            <h3>Collection Elements: {collection.length}</h3>\r\n            {steps !== 0 ? <h3>Steps: {steps}</h3> : null}\r\n            {complexity !== '' ? <h3>Complexity: {complexity}</h3> : null}\r\n            <h3></h3>\r\n            {collection.map((eachElement, index) => {\r\n                return (\r\n                    <div \r\n                        key={index} \r\n                        style={{\r\n                            backgroundColor: eachElement.color,\r\n                            height: `${eachElement.num}px`,\r\n                            width: fullWidth? (fullWidth - 100) / collection.length : 0,\r\n                            border: '1px solid black',\r\n                            display: 'inline-block',\r\n                            textAlign: 'center',\r\n                            \r\n                        }}\r\n                    >\r\n                    </div>\r\n                )\r\n            })}\r\n            {algorithm !== '' ? <h3>Pseudocode</h3> : null}\r\n            {printAlgorithm()}\r\n        </>\r\n     );\r\n}\r\n \r\nexport default CollectionV;","interface elementProps {\r\n    num: number;\r\n    color: string;\r\n}\r\n\r\n\r\nexport const bubbleSort = (collection: elementProps[], setCollection: Function) => {\r\n    const n = collection.length;\r\n    const A: elementProps[] = [ ...collection ]; \r\n    let swapped = false;\r\n    let aux;\r\n\r\n    do{\r\n\r\n        swapped = false;\r\n\r\n        for(let i = 1; i < n; i++){\r\n        \r\n            if(A[i-1].num > A[i].num){\r\n                aux = A[i];\r\n                A[i] = A[i-1];\r\n                A[i-1] = aux;\r\n                swapped = true;\r\n            }\r\n\r\n        }\r\n\r\n    }while(swapped);\r\n    \r\n    setCollection(A);\r\n}\r\n\r\nexport const bubbleSortOptimized = (collection: elementProps[], setCollection: Function) => {\r\n    let n = collection.length;\r\n    const A: elementProps[] = [ ...collection ]; \r\n    let newN = 0;\r\n    let aux;\r\n\r\n    do{\r\n\r\n        newN = 0;\r\n\r\n        for(let i = 1; i < n; i++){\r\n        \r\n            if(A[i-1].num > A[i].num){\r\n                aux = A[i];\r\n                A[i] = A[i-1];\r\n                A[i-1] = aux;\r\n                newN = i;\r\n            }\r\n\r\n        }\r\n\r\n        n = newN;\r\n\r\n    }while(n > 1);\r\n    \r\n    setCollection(A);\r\n}\r\n\r\nexport const selectionSort = (collection: elementProps[], setCollection: Function) => {\r\n    let n = collection.length;\r\n    const A: elementProps[] = [ ...collection ]; \r\n    let min;\r\n    let aux;\r\n\r\n    for(let i = 0; i < n - 1; i++){\r\n        \r\n        min = i;\r\n\r\n        for(let j = i + 1; j < n; j++){\r\n            if(A[j].num < A[min].num){\r\n                min = j;\r\n            }\r\n        }\r\n\r\n        aux = A[i].num;\r\n        A[i].num = A[min].num;\r\n        A[min].num = aux;\r\n\r\n    }\r\n\r\n    \r\n    setCollection(A);\r\n}\r\n\r\n\r\nexport const insertionSort = (collection: elementProps[], setCollection: Function) => {\r\n    let n = collection.length;\r\n    const A: elementProps[] = [ ...collection ]; \r\n    let i = 1;\r\n    let aux;\r\n    let j;\r\n\r\n    while(i < n){\r\n        j = i;\r\n\r\n        while(j > 0 && A[j-1].num > A[j].num){\r\n            aux = A[j].num;\r\n            A[j].num = A[j-1].num;\r\n            A[j-1].num = aux;\r\n            j = j - 1;\r\n        }\r\n\r\n        i++;\r\n    }\r\n    \r\n    setCollection(A);\r\n}\r\n\r\n\r\nexport const quickSortFull = (collection: elementProps[], setCollection: Function) => {\r\n    let n = collection.length;\r\n    const A: elementProps[] = [ ...collection ];\r\n    let aux;\r\n    \r\n    const quicksort = (A: elementProps[], lo: number, hi: number) => {\r\n        if(lo < hi){\r\n            const p: number = partition(A, lo, hi);\r\n            quicksort(A, lo, p - 1);\r\n            quicksort(A, p + 1, hi);\r\n        }\r\n    }\r\n\r\n    const partition = (A: elementProps[], lo: number, hi: number) => {\r\n        const pivot = A[hi].num;\r\n        let i = lo;\r\n        for(let j = lo; j <= hi; j++){\r\n            if(A[j].num < pivot){\r\n                aux = A[i].num;\r\n                A[i].num = A[j].num;\r\n                A[j].num = aux;\r\n\r\n                i++;\r\n            }\r\n        }\r\n        aux = A[i].num;\r\n        A[i].num = A[hi].num;\r\n        A[hi].num = aux;\r\n        return i;\r\n    }\r\n\r\n    quicksort(A, 0, n-1)\r\n\r\n\r\n    setCollection(A);\r\n}\r\n\r\n\r\nexport const shellSort = (collection: elementProps[], setCollection: Function) => {\r\n    let n = collection.length;\r\n    const A: elementProps[] = [ ...collection ]; \r\n    let aux;\r\n    const gaps = [701, 301, 132, 57, 23, 10, 4, 1];\r\n    let j;\r\n\r\n    for(let gap of gaps) {\r\n\r\n        for (let i = gap; i < n; i++){\r\n\r\n            aux = A[i].num;\r\n            for (j = i; j >= gap && A[j - gap].num > aux; j -= gap){\r\n                A[j].num = A[j - gap].num;\r\n            }\r\n            A[j].num = aux;\r\n        }\r\n\r\n    }\r\n\r\n    setCollection(A);\r\n}\r\n\r\n\r\nexport const mergeSortFull = (collection: elementProps[], setCollection: Function) => {\r\n    let A: elementProps[] = [ ...collection ];\r\n    const mergeSort = (m: elementProps[]) => {\r\n\r\n        if(m.length <= 1){\r\n            return m\r\n        }\r\n\r\n        let left: elementProps[] = [];\r\n        let right: elementProps[] = [];\r\n        for(let i = 0; i < m.length; i++){\r\n            if(i < m.length/2){\r\n                left.push(m[i]);\r\n            }else{\r\n                right.push(m[i]);\r\n            }\r\n        }\r\n\r\n        left = mergeSort(left);\r\n        right = mergeSort(right);\r\n\r\n        return merge(left, right)\r\n    }\r\n    \r\n    const merge = (left: elementProps[], right: elementProps[]) => {\r\n        let result = [];\r\n\r\n        while(left.length > 0 && right.length > 0){\r\n            if(left[0].num <= right[0].num){\r\n                result.push(left[0]);\r\n                left.shift();\r\n            }else{\r\n                result.push(right[0]);\r\n                right.shift();\r\n            }\r\n        }\r\n        while(left.length > 0){\r\n            result.push(left[0]);\r\n            left.shift();\r\n        }\r\n        while(right.length > 0){\r\n            result.push(right[0]);\r\n            right.shift();\r\n        }\r\n        return result;\r\n    }\r\n\r\n    A = mergeSort(A);\r\n\r\n    setCollection(A);\r\n}\r\n\r\n\r\n\r\n/* --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */\r\n\r\n\r\nconst timer = (ms: number) => new Promise(res => setTimeout(res, ms));\r\n\r\nexport const bubbleSortAnimation = async (collection: elementProps[], speed: number, setCollection: Function, setTitle: Function, setSteps: Function, setComplexity: Function, setAlgorithm: Function, setIsSorting: Function) => {\r\n    setIsSorting(true);\r\n    const n = collection.length;\r\n    const A: elementProps[] = [ ...collection ]; \r\n    let swapped = false;\r\n    let aux;\r\n    let count: number = 0;\r\n    \r\n    setTitle('Algorithm: Bubble Sort - Processing');\r\n    setComplexity('О(n2)');\r\n    setAlgorithm('bubble');\r\n    do{\r\n\r\n        swapped = false;\r\n\r\n        for(let i = 1; i < n; i++){\r\n            \r\n            A[i-1].color = '#0EF4FF';\r\n            A[i].color = '#0EF4FF';\r\n            \r\n            setCollection(A);\r\n            \r\n            await timer(speed);\r\n\r\n            if(A[i-1].num > A[i].num){\r\n                setSteps(count);\r\n                count ++;\r\n\r\n                aux = A[i];\r\n                A[i] = A[i-1];\r\n                A[i-1] = aux;\r\n                swapped = true;\r\n\r\n                A[i-1].color = '#a83432';\r\n                A[i].color = '#a83432';\r\n                setCollection(A);\r\n                await timer(speed);\r\n            }\r\n\r\n            A[i-1].color = '#379B5F';\r\n            A[i].color = '#379B5F';\r\n\r\n            setCollection(A);\r\n        }\r\n\r\n    }while(swapped);\r\n    \r\n    setTitle('Algorithm: Bubble Sort - Finished');\r\n    setCollection(A);\r\n    setIsSorting(false);\r\n}\r\n\r\n\r\nexport const bubbleSortOptimizedAnimation = async (collection: elementProps[], speed: number, setCollection: Function, setTitle: Function, setSteps: Function, setComplexity: Function, setAlgorithm: Function, setIsSorting: Function) => {\r\n    setIsSorting(true);\r\n    let n = collection.length;\r\n    const A: elementProps[] = [ ...collection ]; \r\n    let newN = 0;\r\n    let aux;\r\n    let count: number = 0;\r\n\r\n    setTitle('Algorithm: Bubble Sort Optimized - Processing');\r\n    setComplexity('О(n2)');\r\n    setAlgorithm('bubbleOptimized');\r\n    do{\r\n\r\n        newN = 0;\r\n\r\n        for(let i = 1; i < n; i++){\r\n\r\n            A[i-1].color = '#0EF4FF';\r\n            A[i].color = '#0EF4FF';\r\n            \r\n            setCollection(A);\r\n            \r\n            await timer(speed);\r\n\r\n            if(A[i-1].num > A[i].num){\r\n                setSteps(count);\r\n                count ++;\r\n\r\n                aux = A[i];\r\n                A[i] = A[i-1];\r\n                A[i-1] = aux;\r\n                newN = i;\r\n\r\n                A[i-1].color = '#a83432';\r\n                A[i].color = '#a83432';\r\n                setCollection(A);\r\n                await timer(speed);\r\n            }\r\n\r\n\r\n            A[i-1].color = '#379B5F';\r\n            A[i].color = '#379B5F';\r\n\r\n            setCollection(A);\r\n        }\r\n\r\n        n = newN;\r\n\r\n    }while(n > 1);\r\n    \r\n    setTitle('Algorithm: Bubble Sort Optimized - Finished');\r\n    setCollection(A);\r\n    setIsSorting(false);\r\n}\r\n\r\n\r\nexport const selectionSortAnimation = async (collection: elementProps[], speed: number, setCollection: Function, setTitle: Function, setSteps: Function, setComplexity: Function, setAlgorithm: Function, setIsSorting: Function) => {\r\n    setIsSorting(true);\r\n    let n = collection.length;\r\n    const A: elementProps[] = [ ...collection ]; \r\n    let min;\r\n    let aux;\r\n    let count: number = 0;\r\n\r\n    setTitle('Algorithm: Selection Sort - Processing');\r\n    setComplexity('О(n2)');\r\n    setAlgorithm('selection');\r\n    for(let i = 0; i < n - 1; i++){\r\n        \r\n        min = i;\r\n\r\n        for(let j = i + 1; j < n; j++){\r\n            A[min].color = '#fcba03'\r\n            A[j].color = '#0EF4FF';\r\n            A[i].color = '#0EF4FF';\r\n            \r\n            setCollection(A);\r\n            \r\n            await timer(speed);\r\n            A[j].color = '#379B5F';\r\n            A[i].color = '#379B5F';\r\n            A[min].color = '#379B5F';\r\n            \r\n            if(A[j].num < A[min].num){\r\n                setSteps(count);\r\n                count ++;\r\n                min = j;\r\n            }\r\n            \r\n        }\r\n\r\n        aux = A[i].num;\r\n        A[i].num = A[min].num;\r\n        A[min].num = aux;\r\n        \r\n        A[i].color = '#a83432';\r\n        A[min].color = '#a83432';\r\n        setCollection(A);\r\n        await timer(speed);\r\n\r\n        A[i].color = '#379B5F';\r\n        A[min].color = '#379B5F';\r\n\r\n        setCollection(A);\r\n    }\r\n\r\n    \r\n    setTitle('Algorithm: Selection Sort - Finished');\r\n    setCollection(A);\r\n    setIsSorting(false);\r\n}\r\n\r\n\r\nexport const insertionSortAnimation = async (collection: elementProps[], speed: number, setCollection: Function, setTitle: Function, setSteps: Function, setComplexity: Function, setAlgorithm: Function, setIsSorting: Function) => {\r\n    setIsSorting(true);\r\n    let n = collection.length;\r\n    const A: elementProps[] = [ ...collection ]; \r\n    let i = 1;\r\n    let aux;\r\n    let j;\r\n    let count: number = 0;\r\n\r\n    setTitle('Algorithm: Insertion Sort - Processing');\r\n    setComplexity('О(n2)');\r\n    setAlgorithm('insertion');\r\n    while(i < n){\r\n        j = i;\r\n\r\n        while(j > 0 && A[j-1].num > A[j].num){\r\n            A[j].color = '#0EF4FF';\r\n            A[j-1].color = '#0EF4FF';\r\n            setCollection(A);\r\n            setSteps(count);\r\n            count ++;\r\n            await timer(speed);\r\n\r\n\r\n            \r\n            aux = A[j].num;\r\n            A[j].num = A[j-1].num;\r\n            A[j-1].num = aux;\r\n            \r\n            \r\n            A[j].color = '#a83432';\r\n            A[j-1].color = '#a83432';\r\n            setCollection(A);\r\n            await timer(speed);\r\n\r\n            A[j].color = '#379B5F';\r\n            A[j-1].color = '#379B5F';\r\n\r\n            setCollection(A);\r\n\r\n            j = j - 1;\r\n        }\r\n\r\n        i++;\r\n    }\r\n    \r\n    setTitle('Algorithm: Insertion Sort - Finished');\r\n    setCollection(A);\r\n    setIsSorting(false);\r\n}\r\n\r\n\r\n\r\nexport const quickSortFullAnimation = async (collection: elementProps[], speed: number, setCollection: Function, setTitle: Function, setSteps: Function, setComplexity: Function, setAlgorithm: Function, setIsSorting: Function) => {\r\n    setIsSorting(true);\r\n    let n = collection.length;\r\n    const A: elementProps[] = [ ...collection ];\r\n    let aux;\r\n    let count: number = 0;\r\n    \r\n    const quicksort = async (A: elementProps[], lo: number, hi: number) => {\r\n        if(lo < hi){\r\n            const p: number = await partition(A, lo, hi);\r\n            await quicksort(A, lo, p - 1);\r\n            await quicksort(A, p + 1, hi);\r\n        }\r\n    }\r\n\r\n    const partition = async (A: elementProps[], lo: number, hi: number) => {\r\n        const pivot = A[hi].num;\r\n\r\n        A[hi].color = '#fcba03'\r\n        setCollection(A);\r\n        setSteps(count);\r\n        await timer(speed);\r\n\r\n        let i = lo;\r\n        for(let j = lo; j <= hi; j++){\r\n            \r\n            A[i].color = '#a742f5';\r\n            A[j].color = '#0EF4FF';\r\n            setCollection(A);\r\n            \r\n            await timer(speed);\r\n\r\n            if(A[j].num < pivot){\r\n                setSteps(count);\r\n                count ++;\r\n\r\n                aux = A[i].num;\r\n                A[i].num = A[j].num;\r\n                A[j].num = aux;\r\n\r\n                A[j].color = '#a83432';\r\n                A[i].color = '#a83432';\r\n                setCollection(A);\r\n                await timer(speed);\r\n\r\n                \r\n                A[j].color = '#379B5F';\r\n                A[i].color = '#379B5F';\r\n                \r\n                i++;\r\n            }\r\n            A[j].color = '#379B5F';\r\n            A[i].color = '#379B5F';\r\n        }\r\n        aux = A[i].num;\r\n        A[i].num = A[hi].num;\r\n        A[hi].num = aux;\r\n        count++;\r\n\r\n        A[i].color = '#379B5F';\r\n        A[hi].color = '#379B5F';\r\n        setCollection(A);\r\n        return i;\r\n    }\r\n\r\n    setTitle('Algorithm: QuickSort - Processing');\r\n    setComplexity('O(n log n)');\r\n    setAlgorithm('quicksort');\r\n\r\n    await quicksort(A, 0, n-1)\r\n\r\n\r\n    setTitle('Algorithm: QuickSort - Finished');\r\n    setCollection(A);\r\n    setIsSorting(false);\r\n}\r\n\r\n\r\n\r\n\r\nexport const shellSortAnimation = async (collection: elementProps[], speed: number, setCollection: Function, setTitle: Function, setSteps: Function, setComplexity: Function, setAlgorithm: Function, setIsSorting: Function) => {\r\n    setIsSorting(true);\r\n    setTitle('Algorithm: Shell Sort - Processing');\r\n    setComplexity('О(n2)');\r\n    setAlgorithm('shell');\r\n    let n = collection.length;\r\n    const A: elementProps[] = [ ...collection ]; \r\n    let temp;\r\n    const gaps = [701, 301, 132, 57, 23, 10, 4, 1];\r\n    let j;\r\n    let count: number = 0;\r\n    \r\n    for(let gap of gaps) {\r\n\r\n        for (let i = gap; i < n; i++){\r\n\r\n            temp = A[i].num;\r\n\r\n            for (j = i; j >= gap && A[j - gap].num > temp; j -= gap){\r\n\r\n                A[j].color = '#0EF4FF';\r\n                A[j - gap].color = '#0EF4FF';\r\n                setCollection(A);\r\n                setSteps(count);\r\n                count ++;\r\n                await timer(speed);\r\n                A[j].color = '#379B5F';\r\n                A[j - gap].color = '#379B5F';\r\n                setCollection(A);\r\n\r\n                A[j].num = A[j - gap].num;\r\n\r\n                A[j].color = '#a83432';\r\n                setCollection(A);\r\n                await timer(speed);\r\n                A[j].color = '#379B5F';\r\n                setCollection(A);\r\n            }\r\n            \r\n            A[j].num = temp;\r\n\r\n            A[j].color = '#a83432';\r\n            setCollection(A);\r\n            await timer(speed);\r\n            A[j].color = '#379B5F';\r\n            setCollection(A);\r\n        }\r\n\r\n    }\r\n    \r\n    setTitle('Algorithm: Shell Sort - Finished');\r\n    setCollection(A);\r\n    setIsSorting(false);\r\n}\r\n\r\n\r\n\r\nexport const mergeSortFullAnimation = async (collection: elementProps[], speed: number, setCollection: Function, setTitle: Function, setSteps: Function, setComplexity: Function, setAlgorithm: Function, setIsSorting: Function) => {\r\n    setIsSorting(true);\r\n    setTitle('Algorithm: Merge Sort - Processing');\r\n    setComplexity('О(n2)');\r\n    setAlgorithm('merge');\r\n    let A: elementProps[] = [ ...collection ];\r\n    let count: number = 0;\r\n\r\n    const mergeSort = async (m: elementProps[]) => {\r\n\r\n        if(m.length <= 1){\r\n            return m\r\n        }\r\n\r\n        let left: elementProps[] = [];\r\n        let right: elementProps[] = [];\r\n        for(let i = 0; i < m.length; i++){\r\n            \r\n            if(i < m.length/2){\r\n                left.push(m[i]);\r\n            }else{\r\n                right.push(m[i]);\r\n            }\r\n        }\r\n        \r\n\r\n        left = await mergeSort(left);\r\n\r\n\r\n        right = await mergeSort(right);\r\n\r\n        return await merge(left, right)\r\n    }\r\n    \r\n    const merge = async (left: elementProps[], right: elementProps[]) => {\r\n        let result = [];\r\n\r\n        while(left.length > 0 && right.length > 0){\r\n            setSteps(count);\r\n            count ++;\r\n            if(left[0].num <= right[0].num){\r\n                result.push(left[0]);\r\n                left.shift();\r\n            }else{\r\n                result.push(right[0]);\r\n                right.shift();\r\n            }\r\n            setCollection(result);\r\n            await timer(speed);\r\n        }\r\n        while(left.length > 0){\r\n            setSteps(count);\r\n            count ++;\r\n\r\n            result.push(left[0]);\r\n            left.shift();\r\n\r\n            setCollection(result);\r\n            await timer(speed);\r\n        }\r\n        while(right.length > 0){\r\n            setSteps(count);\r\n            count ++;\r\n\r\n            result.push(right[0]);\r\n            right.shift();\r\n\r\n            setCollection(result);\r\n            await timer(speed);\r\n        }\r\n\r\n        \r\n\r\n        return result;\r\n    }\r\n\r\n    A = await mergeSort(A);\r\n\r\n    setTitle('Algorithm: Merge Sort - Finished');\r\n    setCollection(A);\r\n    setIsSorting(false);\r\n}","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport Options from './Options';\r\nimport CollectionV from './CollectionV';\r\nimport { bubbleSortAnimation, bubbleSortOptimizedAnimation, selectionSortAnimation, insertionSortAnimation, quickSortFullAnimation, shellSortAnimation, mergeSortFullAnimation } from '../../helpers/sortingAlgorithms';\r\nimport CollectionContext from '../../context/collection/collectionContext';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  slider: {\r\n    color: '#FFFFFF',\r\n    maxWidth: '100px',\r\n    margin: '10px'\r\n  }\r\n}));\r\n\r\n\r\n\r\n\r\ninterface elementProps {\r\n  num: number;\r\n  color: string;\r\n}\r\n\r\n\r\nconst Dashboard = () => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const viewer = useRef<HTMLDivElement>(null);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [ fullWidth, setFullWidth] = useState(0);\r\n  const [ length, setLength ] = useState<any>(10);\r\n  const [ speed, setSpeed ] = useState<any>(1000);\r\n\r\n  const { collection, title, isSorting, setCollection, setTitle, setSteps, setComplexity, setAlgorithm, setIsSorting } = useContext(CollectionContext);\r\n\r\n  useEffect(() => {\r\n    setFullWidth(viewer.current?.offsetWidth ? viewer.current?.offsetWidth : 0);\r\n  }, [viewer, setFullWidth]);\r\n\r\n  useEffect(() => {\r\n      let newCollection: elementProps[] = [];\r\n      for(let i = 0;  i < length; i++){\r\n          newCollection[i] = {\r\n            num: Math.floor(Math.random() * (100 - 0) * 3),\r\n            color: '#379B5F'\r\n          };\r\n      }\r\n      setCollection(newCollection);\r\n      setTitle('');\r\n      setSteps(0);\r\n      setComplexity('');\r\n      setAlgorithm('');\r\n  }, [setCollection, length]);\r\n\r\n\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  \r\n  const sort = (name: string) => {\r\n    if(!isSorting) {\r\n      switch(name){\r\n        case 'bubble':\r\n          bubbleSortAnimation(collection, speed, setCollection, setTitle, setSteps, setComplexity, setAlgorithm, setIsSorting);\r\n          return;\r\n        case 'bubbleOptimized':\r\n          bubbleSortOptimizedAnimation(collection, speed, setCollection, setTitle, setSteps, setComplexity, setAlgorithm, setIsSorting);\r\n          return;\r\n        case 'selection':\r\n          selectionSortAnimation(collection, speed, setCollection, setTitle, setSteps, setComplexity, setAlgorithm, setIsSorting);\r\n          return;\r\n        case 'insertion':\r\n          insertionSortAnimation(collection, speed, setCollection, setTitle, setSteps, setComplexity, setAlgorithm, setIsSorting);\r\n          return;\r\n        case 'quicksort':\r\n          quickSortFullAnimation(collection, speed, setCollection, setTitle, setSteps, setComplexity, setAlgorithm, setIsSorting);\r\n          return;\r\n        case 'shell':\r\n          shellSortAnimation(collection, speed, setCollection, setTitle, setSteps, setComplexity, setAlgorithm, setIsSorting);\r\n          return;\r\n        case 'merge':\r\n          mergeSortFullAnimation(collection, speed, setCollection, setTitle, setSteps, setComplexity, setAlgorithm, setIsSorting);\r\n          return;\r\n        default:\r\n          return;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Sort Algorithms - David Julián Spiess\r\n          </Typography>\r\n          \r\n          <Typography id=\"discrete-slider\" gutterBottom>\r\n            Elements: \r\n          </Typography>\r\n          <Slider\r\n            defaultValue={30}\r\n            aria-labelledby=\"discrete-slider\"\r\n            valueLabelDisplay=\"auto\"\r\n            step={5}\r\n            marks\r\n            min={5}\r\n            max={100}\r\n            className={classes.slider}\r\n            onChange={(e, val) => setLength(val)}\r\n            disabled={isSorting}\r\n          />\r\n          <Typography id=\"discrete-slider\" gutterBottom>\r\n            Delay: \r\n          </Typography>\r\n          <Slider\r\n            defaultValue={1000}\r\n            aria-labelledby=\"discrete-slider\"\r\n            valueLabelDisplay=\"auto\"\r\n            step={100}\r\n            marks\r\n            min={100}\r\n            max={3000}\r\n            className={classes.slider}\r\n            onChange={(e, val) => setSpeed(val)}\r\n            disabled={isSorting}\r\n          />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <Options sort={sort}/>\r\n      </Drawer>\r\n      \r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container} ref={viewer}>\r\n        <h1>{title}</h1>\r\n        <h3>Delay between operations in ms: {speed}</h3>\r\n          <CollectionV\r\n            fullWidth={fullWidth}\r\n            length={length}\r\n            collection={collection}\r\n          />\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\nimport { createMuiTheme, ThemeProvider  } from '@material-ui/core/styles';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AlertState from './context/alert/alertState';\nimport CollectionState from './context/collection/collectionState';\nimport AlertBox from './components/AlertBox';\nimport Dashboard from './components/dashboard/Dashboard';\n\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#379B5F',\n      \n    },\n    secondary: {\n      main: '#18D26E',\n    },\n    warning: {\n      main: '#18D26E',\n    },\n    type: 'dark',\n  },\n});\n\nconst App: React.FC = () => {\n  return (\n    <AlertState>\n      <CollectionState>\n        <ThemeProvider theme={darkTheme}>\n          <CssBaseline/>\n          <AlertBox/>\n          <Dashboard />\n        </ThemeProvider>\n      </CollectionState>\n    </AlertState>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}